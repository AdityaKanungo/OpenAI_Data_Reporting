import openai
import json
import os

# Set OpenAI API configuration
openai.api_type = "azure"
openai.api_base = "https://<your-endpoint>.openai.azure.com"
openai.api_version = "2023-09-01-preview"
openai.api_key = "<your-api-key>"

def analyze_full_cobol_code(cobol_code):
    # Construct the user prompt for the full code analysis
    user_prompt = f"Analyze the entire COBOL code provided below. Identify all variables defined in the WORKING-STORAGE SECTION and LINKAGE SECTION, including their data types, initial values, and any descriptions. Then trace how each variable is used, modified, or transformed throughout the PROCEDURE DIVISION. Provide the details in JSON format:\n\n{cobol_code}"

    # Call the OpenAI API with the constructed prompt
    try:
        response = openai.Completion.create(
            engine="your-deployed-engine-name",
            prompt=user_prompt,
            max_tokens=4000,  # Adjust max tokens as needed
            temperature=0.2
        )
        return response['choices'][0]['text']
    except Exception as e:
        print(f"Error during OpenAI API call: {e}")
        return None

def process_entire_cobol_file(file_path):
    # Read the entire COBOL code file
    try:
        with open(file_path, 'r') as file:
            cobol_code = file.read()
    except FileNotFoundError:
        print(f"Error: File not found at {file_path}")
        return
    except Exception as e:
        print(f"Error reading file: {e}")
        return
    
    # Step 1: Analyze the entire COBOL code in one call
    analysis_result = analyze_full_cobol_code(cobol_code)
    
    if analysis_result:
        # Attempt to parse the result as JSON
        try:
            analysis_json = json.loads(analysis_result)
            
            # Extract the original filename and change the extension to .json
            base_filename = os.path.splitext(os.path.basename(file_path))[0]
            json_filename = f"{base_filename}.json"
            
            # Save the analysis result in a JSON file
            with open(json_filename, "w") as json_file:
                json.dump(analysis_json, json_file, indent=4)
            
            print(f"Analysis successfully saved to {json_filename}")
        except json.JSONDecodeError:
            print("Error: The response from OpenAI was not in the expected JSON format.")
            # Save the raw response for further inspection
            raw_filename = f"{base_filename}_analysis_raw.txt"
            with open(raw_filename, "w") as text_file:
                text_file.write(analysis_result)
            print(f"Raw analysis saved to {raw_filename}")
    else:
        print("No analysis result returned from OpenAI API.")

# Example usage
process_entire_cobol_file("path/to/your/cobol_code.cbl")
